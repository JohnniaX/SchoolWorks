test[, 1] <- runif(n=200, min=0, max=1)
test[, 2] <- runif(n=200, min=0, max=1)
for (i in 1:200) {
if (((test[i,1]-0.5)^2+(test[i,2]-0.5)^2>0.15) & (test[i,1]>0.5)) {
test_label[i] = "red"
} else if (((test[i,1]-0.5)^2+(test[i,2]-0.5)^2>0.15) & (test[i,1]<=0.5)) {
test_label[i] = "green"
} else {
test_label[i] = "blue"
}
}
test_dat <- data.frame(feature1=test[,1], feature2=test[,2])
ggplot() + geom_point(data=train_dat, aes(x=feature1, y=feature2, color=train_label, shape='Training Set')) + geom_point(data=test_dat, aes(x=feature1, y=feature2, color=test_label, shape='Testing Set')) + scale_color_manual(values=c('blue', 'green', 'red'), name='label') + ggtitle("Training Set and Testing Set Data") + theme(plot.title=element_text(hjust=0.5)) + xlab('X1') + ylab('X2')
k <- 50
err <- matrix(NA, k, 2)
for (kk in 1:k) {
test_train <- knn(train, train, cl=train_label, k=kk)
err[kk, 1] <- sum(test_train != train_label) / 200
test_test <- knn(train, test, cl=train_label, k=kk)
err[kk, 2] <- sum(test_test != test_label) / 200
}
x = 1 / (1:k)
ggplot() + geom_line(aes(x=x, y=err[, 1], color='Training Set Error')) + geom_line(aes(x=x, y=err[, 2], color='Testing Set Error')) + ggtitle('Classification Error According to k value') + theme(plot.title=element_text(hjust=0.5)) + xlab('1/k') + ylab('Error')
k <- which(err[, 2]==min(err[, 2]))[1]
prediction <- knn(train, test, cl=train_label)
blues <- which(prediction=='blue')
greens <- which(prediction=='green')
reds <- which(prediction=='red')
ggplot() + geom_point(aes(x=test[, 1], y=test[, 2], color=test_label, shape='Real')) + scale_color_manual(values=c('blue', 'green', 'red')) + geom_point(aes(x=test[blues, 1], y=test[blues, 2], shape='Prediction'), color='blue', cex=3, lwd=2) + geom_point(aes(x=test[reds, 1], y=test[reds, 2], shape='Prediction'), color='red', cex=3, lwd=2) + geom_point(aes(x=test[greens, 1], y=test[greens, 2], shape='Prediction'), color='green', cex=3, lwd=2) + scale_shape_manual(values=c(1, 17)) + ggtitle(paste('Prediction vs Real at k=', k)) + xlab('X1') + ylab('X2') + theme(plot.title=element_text(hjust=0.5))
k <- which(err[, 2]==min(err[, 2]))[1]
prediction <- knn(train, test, cl=label)
library(ggplot2)
set.seed(12345)
train <- matrix(NA, 50, 2)
label <- rep('', 50)
# red
train[1:25, 1] <- rnorm(n=25, mean=0, sd=1)
train[1:25, 2] <- rnorm(n=25, mean=0, sd=1)
label[1:25] <- 'red'
# blue
train[26:50, 1] <- rnorm(n=25, mean=1.5, sd=1)
train[26:50, 2] <- rnorm(n=25, mean=1.5, sd=1)
label[26:50] <- 'blue'
train_dat <- data.frame(feature1=train[,1], feature2=train[,2])
plot <- ggplot(train_dat, aes(x=feature1, y=feature2)) + geom_point(aes(color=label)) + scale_color_manual(values=c('blue', 'red')) + ggtitle("Training Set") + theme(plot.title=element_text(hjust=0.5)) + xlab('X1') + ylab('X2')
plot
test <- matrix(NA, 50, 2)
testlab <- rep('', 50)
# red
test[1:25, 1] <- rnorm(n=25, mean=0, sd=1)
test[1:25, 2] <- rnorm(n=25, mean=0, sd=1)
testlab[1:25] <- 'red'
# blue
test[26:50, 1] <- rnorm(n=25, mean=1.5, sd=1)
test[26:50, 2] <- rnorm(n=25, mean=1.5, sd=1)
testlab[26:50] <- 'blue'
test_dat <- data.frame(feature1=test[,1], feature2=test[,2])
ggplot() + geom_point(data=train_dat, aes(x=feature1, y=feature2, color=label, shape='Training Set')) + geom_point(data=test_dat, aes(x=feature1, y=feature2, color=testlab, shape='Testing Set')) + scale_color_manual(values=c('blue', 'red')) + ggtitle("Training Set and Testing Set Data") + theme(plot.title=element_text(hjust=0.5)) + xlab('X1') + ylab('X2')
library(class)
k <- 20
err <- matrix(NA, k, 2)
for (kk in 1:k) {
test_train <- knn(train, train, cl=label, k=kk)
err[kk, 1] <- sum(test_train != label) / 50
test_test <- knn(train, test, cl=label, k=kk)
err[kk, 2] <- sum(test_test != testlab) / 50
}
x = 1 / (1:k)
ggplot() + geom_line(aes(x=x, y=err[, 1], color='Training Set Error')) + geom_line(aes(x=x, y=err[, 2], color='Testing Set Error')) + ggtitle('Classification Error According to k value') + theme(plot.title=element_text(hjust=0.5)) + xlab('1/k') + ylab('Error')
k <- which(err[, 2]==min(err[, 2]))[1]
prediction <- knn(train, test, cl=label)
blues <- which(prediction=='blue')
reds <- which(prediction=='red')
plot <- ggplot() + geom_point(aes(x=test[, 1], y=test[, 2], color=testlab, shape='Real')) + scale_color_manual(values=c('blue', 'red')) + geom_point(aes(x=test[blues, 1], y=test[blues, 2], shape='Prediction'), color='blue', cex=3, lwd=2) + geom_point(aes(x=test[reds, 1], y=test[reds, 2], shape='Prediction'), color='red', cex=3, lwd=2) + scale_shape_manual(values=c(1, 17)) + ggtitle(paste('Prediction vs Real at k=', k)) + xlab('X1') + ylab('X2') + theme(plot.title=element_text(hjust=0.5))
plot
plot + geom_abline(slope=-1, intercept=1.5)
plot + geom_abline(slope=-1, intercept=1)
sqrt(2)
sqrt(2)/2
1 - sqrt(1.5^2+1.5^2)/2
?pnorm
pnorm(sqrt(1.5^2+1.5^2)/2)
pnorm(sqrt(2)/2)
plot + geom_abline(slope=-1, intercept=1.5)
1 - pnorm(sqrt(1.5^2+1.5^2)/2)
flexbility <- seq(from=1, to=10, by=0.01)
variance <- exp(flexbility * 0.1)
ggplot() + geom_line(variance)
flexbility <- seq(from=1, to=10, by=0.01)
variance <- exp(flexbility * 0.1)
ggplot() + geom_line(aes(x=flexibility, y=variance))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- exp(flexbility * 0.1)
ggplot() + geom_line(aes(x=flexbility, y=variance))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- exp(3 + flexbility * 0.05)
ggplot() + geom_line(aes(x=flexbility, y=variance))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- exp(flexbility * 0.05)
ggplot() + geom_line(aes(x=flexbility, y=variance))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- exp(flexbility * 0.05)
train <- cos(flexbility+5)
ggplot() + geom_line(aes(x=flexbility, y=variance))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- exp(flexbility * 0.05)
train <- cos(flexbility+5)
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- exp(flexbility * 0.05)
train <- cos(2*flexbility+5)
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- exp(flexbility * 0.05)
train <- cos(flexbility+5)
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- exp(flexbility * 0.05)
train <- 10 * cos(flexbility+5)
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- exp(flexbility * 0.05)
train <- 5 * cos(flexbility+ 12) + 5
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- exp(flexbility * 0.1)
train <- 5 * cos(flexbility+ 12) + 5
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
set.seed(12345)
train <- matrix(NA, 50, 2)
label <- rep('', 50)
# red
train[1:25, 1] <- rnorm(n=25, mean=0, sd=1)
train[1:25, 2] <- rnorm(n=25, mean=0, sd=1)
label[1:25] <- 'red'
# blue
train[26:50, 1] <- rnorm(n=25, mean=1.5, sd=1)
train[26:50, 2] <- rnorm(n=25, mean=1.5, sd=1)
label[26:50] <- 'blue'
train_dat <- data.frame(feature1=train[,1], feature2=train[,2])
plot <- ggplot(train_dat, aes(x=feature1, y=feature2)) + geom_point(aes(color=label)) + scale_color_manual(values=c('blue', 'red')) + ggtitle("Training Set") + theme(plot.title=element_text(hjust=0.5)) + xlab('X1') + ylab('X2')
plot
test <- matrix(NA, 50, 2)
testlab <- rep('', 50)
# red
test[1:25, 1] <- rnorm(n=25, mean=0, sd=1)
test[1:25, 2] <- rnorm(n=25, mean=0, sd=1)
testlab[1:25] <- 'red'
# blue
test[26:50, 1] <- rnorm(n=25, mean=1.5, sd=1)
test[26:50, 2] <- rnorm(n=25, mean=1.5, sd=1)
testlab[26:50] <- 'blue'
test_dat <- data.frame(feature1=test[,1], feature2=test[,2])
ggplot() + geom_point(data=train_dat, aes(x=feature1, y=feature2, color=label, shape='Training Set')) + geom_point(data=test_dat, aes(x=feature1, y=feature2, color=testlab, shape='Testing Set')) + scale_color_manual(values=c('blue', 'red')) + ggtitle("Training Set and Testing Set Data") + theme(plot.title=element_text(hjust=0.5)) + xlab('X1') + ylab('X2')
library(class)
k <- 20
err <- matrix(NA, k, 2)
for (kk in 1:k) {
test_train <- knn(train, train, cl=label, k=kk)
err[kk, 1] <- sum(test_train != label) / 50
test_test <- knn(train, test, cl=label, k=kk)
err[kk, 2] <- sum(test_test != testlab) / 50
}
x = 1 / (1:k)
ggplot() + geom_line(aes(x=x, y=err[, 1], color='Training Set Error')) + geom_line(aes(x=x, y=err[, 2], color='Testing Set Error')) + ggtitle('Classification Error According to k value') + theme(plot.title=element_text(hjust=0.5)) + xlab('1/k') + ylab('Error')
k <- which(err[, 2]==min(err[, 2]))[1]
prediction <- knn(train, test, cl=label)
blues <- which(prediction=='blue')
reds <- which(prediction=='red')
plot <- ggplot() + geom_point(aes(x=test[, 1], y=test[, 2], color=testlab, shape='Real')) + scale_color_manual(values=c('blue', 'red')) + geom_point(aes(x=test[blues, 1], y=test[blues, 2], shape='Prediction'), color='blue', cex=3, lwd=2) + geom_point(aes(x=test[reds, 1], y=test[reds, 2], shape='Prediction'), color='red', cex=3, lwd=2) + scale_shape_manual(values=c(1, 17)) + ggtitle(paste('Prediction vs Real at k=', k)) + xlab('X1') + ylab('X2') + theme(plot.title=element_text(hjust=0.5))
plot
plot + geom_abline(slope=-1, intercept=1.5)
1 - pnorm(sqrt(1.5^2+1.5^2)/2)
set.seed(12345)
train <- matrix(NA, 200, 2)
train_label <- rep('', 200)
# Xs
train[, 1] <- runif(n=200, min=0, max=1)
train[, 2] <- runif(n=200, min=0, max=1)
for (i in 1:200) {
if (((train[i,1]-0.5)^2+(train[i,2]-0.5)^2>0.15) & (train[i,1]>0.5)) {
train_label[i] = "red"
} else if (((train[i,1]-0.5)^2+(train[i,2]-0.5)^2>0.15) & (train[i,1]<=0.5)) {
train_label[i] = "green"
} else {
train_label[i] = "blue"
}
}
train_dat <- data.frame(feature1=train[,1], feature2=train[,2])
plot <- ggplot(train_dat, aes(x=feature1, y=feature2)) + geom_point(aes(color=train_label)) + scale_color_manual(values=c('blue', 'green', 'red')) + ggtitle("Training Set") + theme(plot.title=element_text(hjust=0.5)) + xlab('X1') + ylab('X2')
plot
test <- matrix(NA, 200, 2)
test_label <- rep('', 200)
# red
test[, 1] <- runif(n=200, min=0, max=1)
test[, 2] <- runif(n=200, min=0, max=1)
for (i in 1:200) {
if (((test[i,1]-0.5)^2+(test[i,2]-0.5)^2>0.15) & (test[i,1]>0.5)) {
test_label[i] = "red"
} else if (((test[i,1]-0.5)^2+(test[i,2]-0.5)^2>0.15) & (test[i,1]<=0.5)) {
test_label[i] = "green"
} else {
test_label[i] = "blue"
}
}
test_dat <- data.frame(feature1=test[,1], feature2=test[,2])
ggplot() + geom_point(data=train_dat, aes(x=feature1, y=feature2, color=train_label, shape='Training Set')) + geom_point(data=test_dat, aes(x=feature1, y=feature2, color=test_label, shape='Testing Set')) + scale_color_manual(values=c('blue', 'green', 'red'), name='label') + ggtitle("Training Set and Testing Set Data") + theme(plot.title=element_text(hjust=0.5)) + xlab('X1') + ylab('X2')
k <- 50
err <- matrix(NA, k, 2)
for (kk in 1:k) {
test_train <- knn(train, train, cl=train_label, k=kk)
err[kk, 1] <- sum(test_train != train_label) / 200
test_test <- knn(train, test, cl=train_label, k=kk)
err[kk, 2] <- sum(test_test != test_label) / 200
}
x = 1 / (1:k)
ggplot() + geom_line(aes(x=x, y=err[, 1], color='Training Set Error')) + geom_line(aes(x=x, y=err[, 2], color='Testing Set Error')) + ggtitle('Classification Error According to k value') + theme(plot.title=element_text(hjust=0.5)) + xlab('1/k') + ylab('Error')
k <- which(err[, 2]==min(err[, 2]))[1]
prediction <- knn(train, test, cl=train_label)
blues <- which(prediction=='blue')
greens <- which(prediction=='green')
reds <- which(prediction=='red')
ggplot() + geom_point(aes(x=test[, 1], y=test[, 2], color=test_label, shape='Real')) + scale_color_manual(values=c('blue', 'green', 'red')) + geom_point(aes(x=test[blues, 1], y=test[blues, 2], shape='Prediction'), color='blue', cex=3, lwd=2) + geom_point(aes(x=test[reds, 1], y=test[reds, 2], shape='Prediction'), color='red', cex=3, lwd=2) + geom_point(aes(x=test[greens, 1], y=test[greens, 2], shape='Prediction'), color='green', cex=3, lwd=2) + scale_shape_manual(values=c(1, 17)) + ggtitle(paste('Prediction vs Real at k=', k)) + xlab('X1') + ylab('X2') + theme(plot.title=element_text(hjust=0.5))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2 * exp(flexbility * 0.1)
train <- 5 * cos(flexbility+ 12) + 5
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2 * exp(flexbility * 0.1) - 2
train <- 5 * cos(flexbility+ 12) + 5
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2 * exp(flexbility * 0.1) - 2
train <- 5 * cos(10 * flexbility+ 12) + 5
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2 * exp(flexbility * 0.1) - 2
train <- 5 * cos(0.1 * flexbility+ 12) + 5
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2 * exp(flexbility * 0.1) - 2
train <- 5 * cos(0.5 * flexbility+ 12) + 5
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2 * exp(flexbility * 0.1) - 2
train <- 5 * cos(0.4 * flexbility+ 12) + 5
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexbility*0.1)-2
train <- 5*cos(0.4*flexbility+12) + 5
bias <- 5*cos(0.4*flexbility+7) + 3
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexbility*0.1)-2
train <- 5*cos(0.4*flexbility+12) + 5
bias <- 5*cos(0.4*flexbility+7) + 3
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train)) + geom_line(aes(x=flexbility, y=bias))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexbility*0.1)-2
train <- 5*cos(0.4*flexbility+12) + 5
bias <- 5*cos(0.4*flexbility+12) + 3
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train)) + geom_line(aes(x=flexbility, y=bias))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexbility*0.1)-2
train <- 5*cos(0.4*flexbility+12) + 8
bias <- 4*cos(0.4*flexbility+12) + 5
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train)) + geom_line(aes(x=flexbility, y=bias))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexbility*0.1)-2
train <- 5*cos(0.4*flexbility+12) + 8
#test <-
bias <- 4*cos(0.4*flexbility+12) + 5
irreducible_err <- 2
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train)) + geom_line(aes(x=flexbility, y=bias)) + geom_line(aes(x=flexbility, y=irreducible_err))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexbility*0.1)-2
train <- 5*cos(0.4*flexbility+12) + 8
#test <-
bias <- 4*cos(0.4*flexbility+12) + 5
irreducible_err <- 3
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train)) + geom_line(aes(x=flexbility, y=bias)) + geom_line(aes(x=flexbility, y=irreducible_err))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 10*exp(flexbility*0.1)-10
train <- 5*cos(0.4*flexbility+12) + 8
#test <-
bias <- 4*cos(0.4*flexbility+12) + 5
irreducible_err <- 3
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train)) + geom_line(aes(x=flexbility, y=bias)) + geom_line(aes(x=flexbility, y=irreducible_err))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexbility*0.1)-2
train <- 5*cos(0.4*flexbility+12) + 8
#test <-
bias <- 4*cos(0.4*flexbility+12) + 5
irreducible_err <- 3
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train)) + geom_line(aes(x=flexbility, y=bias)) + geom_line(aes(x=flexbility, y=irreducible_err))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexbility*0.04)-2
train <- 5*cos(0.4*flexbility+12) + 8
#test <-
bias <- 4*cos(0.4*flexbility+12) + 5
irreducible_err <- 3
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train)) + geom_line(aes(x=flexbility, y=bias)) + geom_line(aes(x=flexbility, y=irreducible_err))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 10*exp(flexbility*0.04)-10
train <- 5*cos(0.4*flexbility+12) + 8
#test <-
bias <- 4*cos(0.4*flexbility+12) + 5
irreducible_err <- 3
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train)) + geom_line(aes(x=flexbility, y=bias)) + geom_line(aes(x=flexbility, y=irreducible_err))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 4*exp(flexbility*0.04)-4
train <- 5*cos(0.4*flexbility+12) + 8
#test <-
bias <- 4*cos(0.4*flexbility+12) + 5
irreducible_err <- 3
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train)) + geom_line(aes(x=flexbility, y=bias)) + geom_line(aes(x=flexbility, y=irreducible_err))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexbility*0.1)-2
train <- 5*cos(0.4*flexbility+12) + 8
#test <-
bias <- 4*cos(0.4*flexbility+12) + 5
irreducible_err <- 3
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train)) + geom_line(aes(x=flexbility, y=bias)) + geom_line(aes(x=flexbility, y=irreducible_err))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexbility*0.1+2)-2
train <- 5*cos(0.4*flexbility+12) + 8
#test <-
bias <- 4*cos(0.4*flexbility+12) + 5
irreducible_err <- 3
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train)) + geom_line(aes(x=flexbility, y=bias)) + geom_line(aes(x=flexbility, y=irreducible_err))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexbility*0.1)-2
train <- 5*cos(0.4*flexbility+12) + 8
#test <-
bias <- 4*cos(0.4*flexbility+12) + 5
irreducible_err <- 3
ggplot() + geom_line(aes(x=flexbility, y=variance)) + geom_line(aes(x=flexbility, y=train)) + geom_line(aes(x=flexbility, y=bias)) + geom_line(aes(x=flexbility, y=irreducible_err))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexbility*0.1)-2
train <- 5*cos(0.4*flexbility+12) + 8
#test <-
bias <- 4*cos(0.4*flexbility+12) + 5
irreducible_err <- 3
ggplot() + geom_line(aes(x=flexbility, y=variance, color='variance')) + geom_line(aes(x=flexbility, y=train, color='Train')) + geom_line(aes(x=flexbility, y=bias, color='Bias')) + geom_line(aes(x=flexbility, y=irreducible_err, color='Irreducible Error'))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexbility*0.1)-2
train <- 5*cos(0.4*flexbility+12) + 8
test <- 5*cos(0.4*flexbility+20) + 12
bias <- 4*cos(0.4*flexbility+12) + 5
irreducible_err <- 3
ggplot() + geom_line(aes(x=flexbility, y=variance, color='Variance')) + geom_line(aes(x=flexbility, y=train, color='Train')) + geom_line(aes(x=flexbility, y=bias, color='Bias')) + geom_line(aes(x=flexbility, y=irreducible_err, color='Irreducible Error'))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexbility*0.1)-2
train <- 5*cos(0.4*flexbility+12) + 8
test <- 5*cos(0.4*flexbility+20) + 12
bias <- 4*cos(0.4*flexbility+12) + 5
irreducible_err <- 3
ggplot() + geom_line(aes(x=flexbility, y=variance, color='Variance')) + geom_line(aes(x=flexbility, y=train, color='Train')) + geom_line(aes(x=flexbility, y=bias, color='Bias')) + geom_line(aes(x=flexbility, y=irreducible_err, color='Irreducible Error')) + geom_line(aes(x=flexbility, y=test, color='Test'))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexbility*0.1)-2
train <- 5*cos(0.4*flexbility+12) + 8
test <- 5*cos(0.4*flexbility+20) + 16
bias <- 4*cos(0.4*flexbility+12) + 5
irreducible_err <- 3
ggplot() + geom_line(aes(x=flexbility, y=variance, color='Variance')) + geom_line(aes(x=flexbility, y=train, color='Train')) + geom_line(aes(x=flexbility, y=bias, color='Bias')) + geom_line(aes(x=flexbility, y=irreducible_err, color='Irreducible Error')) + geom_line(aes(x=flexbility, y=test, color='Test'))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexbility*0.1)-2
train <- 5*cos(0.4*flexbility+12) + 8
test <- 5*cos(0.4*flexbility+25) + 16
bias <- 4*cos(0.4*flexbility+12) + 5
irreducible_err <- 3
ggplot() + geom_line(aes(x=flexbility, y=variance, color='Variance')) + geom_line(aes(x=flexbility, y=train, color='Train')) + geom_line(aes(x=flexbility, y=bias, color='Bias')) + geom_line(aes(x=flexbility, y=irreducible_err, color='Irreducible Error')) + geom_line(aes(x=flexbility, y=test, color='Test'))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexbility*0.1)-2
train <- 5*cos(0.4*flexbility+12) + 8
test <- 5*cos(0.4*flexbility+25) + 14
bias <- 4*cos(0.4*flexbility+12) + 5
irreducible_err <- 3
ggplot() + geom_line(aes(x=flexbility, y=variance, color='Variance')) + geom_line(aes(x=flexbility, y=train, color='Train')) + geom_line(aes(x=flexbility, y=bias, color='Bias')) + geom_line(aes(x=flexbility, y=irreducible_err, color='Irreducible Error')) + geom_line(aes(x=flexbility, y=test, color='Test'))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexbility*0.1)-2
train <- 5*cos(0.4*flexbility+12) + 8
test <- 5*cos(0.4*flexbility+25) + 12
bias <- 4*cos(0.4*flexbility+12) + 5
irreducible_err <- 3
ggplot() + geom_line(aes(x=flexbility, y=variance, color='Variance')) + geom_line(aes(x=flexbility, y=train, color='Train')) + geom_line(aes(x=flexbility, y=bias, color='Bias')) + geom_line(aes(x=flexbility, y=irreducible_err, color='Irreducible Error')) + geom_line(aes(x=flexbility, y=test, color='Test'))
flexbility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexbility*0.1)-2
train <- 5*cos(0.4*flexbility+12) + 8
test <- 5*cos(0.4*flexbility+25) + 12
bias <- 4*cos(0.4*flexbility+12) + 5
irreducible_err <- 3
ggplot() + geom_line(aes(x=flexbility, y=variance, color='Variance')) + geom_line(aes(x=flexbility, y=train, color='Train')) + geom_line(aes(x=flexbility, y=bias, color='Bias')) + geom_line(aes(x=flexbility, y=irreducible_err, color='Irreducible Error')) + geom_line(aes(x=flexbility, y=test, color='Test')) + ggtitle('MSE Values vs Flexbility') + theme(plot.title=element_text(hjust=0.5))
flexibility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexbility*0.1)-2
train <- 5*cos(0.4*flexbility+12) + 8
test <- 5*cos(0.4*flexbility+25) + 12
bias <- 4*cos(0.4*flexbility+12) + 5
irreducible_err <- 3
ggplot() + geom_line(aes(x=flexibility, y=variance, color='Variance')) + geom_line(aes(x=flexibility, y=train, color='Train')) + geom_line(aes(x=flexibility, y=bias, color='Bias')) + geom_line(aes(x=flexibility, y=irreducible_err, color='Irreducible Error')) + geom_line(aes(x=flexibility, y=test, color='Test')) + ggtitle('MSE Values vs Flexibility') + theme(plot.title=element_text(hjust=0.5))
flexibility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexibility*0.1)-2
train <- 5*cos(0.4*flexibility+12) + 8
test <- 5*cos(0.4*flexibility+25) + 12
bias <- 4*cos(0.4*flexibility+12) + 5
irreducible_err <- 3
ggplot() + geom_line(aes(x=flexibility, y=variance, color='Variance')) + geom_line(aes(x=flexibility, y=train, color='Train')) + geom_line(aes(x=flexibility, y=bias, color='Bias')) + geom_line(aes(x=flexibility, y=irreducible_err, color='Irreducible Error')) + geom_line(aes(x=flexibility, y=test, color='Test')) + ggtitle('MSE Values vs Flexibility') + theme(plot.title=element_text(hjust=0.5))
rm(list=lst9)
rm(list=lst())
rm(list=ls())
flexibility <- seq(from=1, to=10, by=0.01)
variance <- 2*exp(flexibility*0.1)-2
train <- 5*cos(0.4*flexibility+12) + 8
test <- 5*cos(0.4*flexibility+25) + 12
bias <- 4*cos(0.4*flexibility+12) + 5
irreducible_err <- 3
ggplot() + geom_line(aes(x=flexibility, y=variance, color='Variance')) + geom_line(aes(x=flexibility, y=train, color='Train')) + geom_line(aes(x=flexibility, y=bias, color='Bias')) + geom_line(aes(x=flexibility, y=irreducible_err, color='Irreducible Error')) + geom_line(aes(x=flexibility, y=test, color='Test')) + ggtitle('MSE Values vs Flexibility') + theme(plot.title=element_text(hjust=0.5))
library(MASS)
dat <- boston
?MASS
library(MASS)
dat <- Boston
library(MASS)
dat <- Boston
nrow(Boston)
ncol(Boston)
library(MASS)
dat <- Boston
nrow(Boston)
ncol(Boston)
?Boston
?Boston
pairs(Boston)
cor(Boston)
cor(Boston)["crim",]
cor(Boston)["crim", ]
ggplot(dat=Boston, aes(x=crim)) + geom_histogram(aes(y=..density..))
ggplot(dat=Boston, aes(x=crim)) + geom_histogram(aes(y=..density..), color="black", fill="grey") +
geom_density(alpha=.2, fill="#FF6666")
ggpairs(Boston)
ggpair(Boston)
library(GGally)
install.packages("GGally")
library(GGally)
ggpair(Boston)
library(GGally)
ggpairs(Boston)
ggplot(dat=Boston, aes(x=crim)) + geom_histogram(aes(y=..density..), color="black", fill="grey") +
geom_density(alpha=.2, fill="#FF6666") + ggtitle('Density Plot of Crim Rate') + theme(plot.title=element_text(hjust=0.5))
ggplot(dat=Boston, aes(x=crim)) + geom_histogram(aes(y=..density..), color="black", fill="grey") +
geom_density(alpha=.2, fill="#FF6666") + ggtitle('Density Plot of Crim Rate') + theme(plot.title=element_text(hjust=0.5))
range(crim)
ggplot(dat=Boston, aes(x=crim)) + geom_histogram(aes(y=..density..), color="black", fill="grey") +
geom_density(alpha=.2, fill="#FF6666") + ggtitle('Density Plot of Crim Rate') + theme(plot.title=element_text(hjust=0.5))
range(Boston$crim)
ggplot(dat=Boston, aes(x=crim)) + geom_histogram(aes(y=..density..), color="black", fill="grey") +
geom_density(alpha=.2, fill="#FF6666") + ggtitle('Density Plot of Crim Rate') + theme(plot.title=element_text(hjust=0.5))
range(Boston$crim)
ggplot(dat=Boston, aes(x=tax)) + geom_histogram(aes(y=..density..), color="black", fill="grey") +
geom_density(alpha=.2, fill="#FF6666") + ggtitle('Density Plot of Crim Rate') + theme(plot.title=element_text(hjust=0.5))
ggplot(dat=Boston, aes(x=tax)) + geom_histogram(aes(y=..density..), color="black", fill="grey") +
geom_density(alpha=.2, fill="#FF6666") + ggtitle('Density Plot of Crim Rate') + theme(plot.title=element_text(hjust=0.5))
ggplot(dat=Boston, aes(x=tax)) + geom_histogram(aes(y=..density..), color="black", fill="grey") +
geom_density(alpha=.2, fill="#FF6666") + ggtitle('Density Plot of Tax Rate') + theme(plot.title=element_text(hjust=0.5))
range(Boston$tax)
ggplot(dat=Boston, aes(x=ptration)) + geom_histogram(aes(y=..density..), color="black", fill="grey") +
geom_density(alpha=.2, fill="#FF6666") + ggtitle('Density Plot of Tax Rate') + theme(plot.title=element_text(hjust=0.5))
ggplot(dat=Boston, aes(x=ptratio)) + geom_histogram(aes(y=..density..), color="black", fill="grey") +
geom_density(alpha=.2, fill="#FF6666") + ggtitle('Density Plot of Tax Rate') + theme(plot.title=element_text(hjust=0.5))
range(Boston$ptratio)
sum(which(Boston$chars == 1))
length(which(Boston$chars == 1))
Boston$chars == 1
length(which(Boston$chars=1))
length(which(Boston$chas==1))
mean(Boston$ptratio)
sd(Boston$ptratio)
Boston[which(medv==max(Boston$medv))]
Boston[which(Boston$medv==max(Boston$medv))]
which(Boston$medv==max(Boston$medv))
Boston[162]
Boston{162}
Boston[,162]
Boston[162,]
Boston[which(Boston$medv==max(Boston$medv)),]
Boston[which(Boston$medv==max(Boston$medv)),]
range(Boston$age)
range(Boston$dis)
length(which(Boston$rm > 6))
length(which(Boston$rm > 8))
mean(Boston[which(Boston$rm > 8),])
Boston[which(Boston$rm > 8),]
apply(Boston[which(Boston$rm > 8),], mean)
apply(Boston[which(Boston$rm > 8),], 2, mean)
?apply
apply(Boston[which(Boston$rm > 8),], 2, mean)
apply(Boston[which(Boston$rm <= 8),], 2, mean)
apply(Boston[which(Boston$rm <= 8),], 2, mean)
above8 <- apply(Boston[which(Boston$rm > 8),], 2, mean)
rest <- apply(Boston[which(Boston$rm <= 8),], 2, mean)
above8 <- apply(Boston[which(Boston$rm > 8),], 2, mean)
rest <- apply(Boston[which(Boston$rm <= 8),], 2, mean)
above8
above8-rest
above8 <- apply(Boston[which(Boston$rm > 8),], 2, mean)
rest <- apply(Boston[which(Boston$rm <= 8),], 2, mean)
above8
above8 - apply(Boston[which(Boston$rm <= 8),], 2, mean)
?Boston
install.packages("tinytex")
