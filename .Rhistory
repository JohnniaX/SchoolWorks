training_dat <- dat[1:800,]
test_dat <- dat[801:1070,]
# LDA
lda.fit <- lda(data=training_dat, Purchase~.)
# training error
train_err <- sum(predict(lda.fit, newdata=training_dat)$class!=training_dat$Purchase)/nrow(training_dat)
print(paste('The training error is ', train_err))
# testing error
test_err <- sum(predict(lda.fit, newdata=test_dat)$class!=test_dat$Purchase)/nrow(test_dat)
print(paste('The test error is ', test_err))
library(MASS)
# Make the first 800 observations to be training set.
training_dat <- dat[1:800,]
test_dat <- dat[801:1070,]
# LDA
lda.fit <- lda(data=training_dat, Purchase~.)
lda.fit
library(ISLR)
library(dplyr)
dat <- OJ # Purchase is a binary qualitative variable
dat <- select(dat, Purchase, WeekofPurchase, StoreID, DiscCH, DiscMM, LoyalCH, SalePriceCH, SalePriceMM, SpecialCH, SpecialMM)
library(ISLR)
library(dplyr)
dat <- OJ # Purchase is a binary qualitative variable
dat <- select(dat, Purchase, WeekofPurchase, StoreID, DiscCH, DiscMM, LoyalCH, SalePriceCH, SalePriceMM, SpecialCH, SpecialMM)
library(ISLR)
library(dplyr)
dat <- OJ # Purchase is a binary qualitative variable
dat <- dat %<%
select(Purchase, WeekofPurchase, StoreID, DiscCH, DiscMM, LoyalCH, SalePriceCH, SalePriceMM, SpecialCH, SpecialMM)
library(ISLR)
library(dplyr)
dat <- OJ # Purchase is a binary qualitative variable
dat <- dat %>%
select(Purchase, WeekofPurchase, StoreID, DiscCH, DiscMM, LoyalCH, SalePriceCH, SalePriceMM, SpecialCH, SpecialMM)
ls(list=())
rm(list=ls())
library(ISLR)
library(dplyr)
dat <- OJ # Purchase is a binary qualitative variable
dat <- select(dat, Purchase, WeekofPurchase, StoreID, DiscCH, DiscMM, LoyalCH, SalePriceCH, SalePriceMM, SpecialCH, SpecialMM)
?select
library(ISLR)
library(dplyr)
dat <- OJ # Purchase is a binary qualitative variable
dat <- select(dat, Purchase)
library(ISLR)
library(dplyr)
dat <- OJ # Purchase is a binary qualitative variable
dat <- select(OJ, Purchase, WeekofPurchase, StoreID, DiscCH, DiscMM, LoyalCH, SalePriceCH, SalePriceMM, SpecialCH, SpecialMM)
View(dat)
library(ISLR)
library(dplyr)
dat <- OJ # Purchase is a binary qualitative variable
dat <- select(dat, Purchase, WeekofPurchase, StoreID, DiscCH, DiscMM, LoyalCH, SalePriceCH, SalePriceMM, SpecialCH, SpecialMM)
library(ISLR)
library(MASS)
library(dplyr)
dat <- OJ # Purchase is a binary qualitative variable
dat <- dat %>%
dplyr::select(Purchase, WeekofPurchase, StoreID, DiscCH, DiscMM, LoyalCH, SalePriceCH, SalePriceMM, SpecialCH, SpecialMM)
ncol(dat)
# Make the first 800 observations to be training set.
training_dat <- dat[1:800,]
test_dat <- dat[801:1070,]
# LDA
lda.fit <- lda(data=training_dat, Purchase~.)
lda.fit
# training error
train_err <- sum(predict(lda.fit, newdata=training_dat)$class!=training_dat$Purchase)/nrow(training_dat)
print(paste('The training error is ', train_err))
# testing error
test_err <- sum(predict(lda.fit, newdata=test_dat)$class!=test_dat$Purchase)/nrow(test_dat)
print(paste('The test error is ', test_err))
?OJ
library(ISLR)
library(MASS)
library(dplyr)
dat <- OJ # Purchase is a binary qualitative variable
dat <- dat %>%
dplyr::select(Purchase, WeekofPurchase, as.factor(StoreID), DiscCH, DiscMM, LoyalCH, SalePriceCH, SalePriceMM, SpecialCH, SpecialMM)
library(ISLR)
library(MASS)
library(dplyr)
dat <- OJ # Purchase is a binary qualitative variable
dat <- dat %>%
dplyr::select(Purchase, WeekofPurchase, StoreID, DiscCH, DiscMM, LoyalCH, SalePriceCH, SalePriceMM, SpecialCH, SpecialMM)
dat$StoreID <- as.factor(StoreID)
library(ISLR)
library(MASS)
library(dplyr)
dat <- OJ # Purchase is a binary qualitative variable
dat <- dat %>%
dplyr::select(Purchase, WeekofPurchase, StoreID, DiscCH, DiscMM, LoyalCH, SalePriceCH, SalePriceMM, SpecialCH, SpecialMM)
dat$StoreID <- as.factor(dat$StoreID)
library(ISLR)
library(MASS)
library(dplyr)
dat <- OJ # Purchase is a binary qualitative variable
dat <- dat %>%
dplyr::select(Purchase, WeekofPurchase, StoreID, DiscCH, DiscMM, LoyalCH, SalePriceCH, SalePriceMM, SpecialCH, SpecialMM)
dat$StoreID <- as.factor(dat$StoreID)
ncol(dat)
# Make the first 800 observations to be training set.
training_dat <- dat[1:800,]
test_dat <- dat[801:1070,]
# LDA
lda.fit <- lda(data=training_dat, Purchase~.)
lda.fit
# training error
train_err <- sum(predict(lda.fit, newdata=training_dat)$class!=training_dat$Purchase)/nrow(training_dat)
print(paste('The training error is ', train_err))
# testing error
test_err <- sum(predict(lda.fit, newdata=test_dat)$class!=test_dat$Purchase)/nrow(test_dat)
print(paste('The test error is ', test_err))
library(ISLR)
library(MASS)
library(dplyr)
dat <- OJ # Purchase is a binary qualitative variable
dat <- dat %>%
dplyr::select(Purchase, WeekofPurchase, StoreID, DiscCH, DiscMM, LoyalCH, SalePriceCH, SalePriceMM, SpecialCH, SpecialMM)
dat$StoreID <- as.factor(dat$StoreID)
cor(OJ)
library(ISLR)
library(MASS)
library(dplyr)
dat <- OJ # Purchase is a binary qualitative variable
dat <- dat %>%
dplyr::select(Purchase, WeekofPurchase, StoreID, DiscCH, DiscMM, LoyalCH, SalePriceCH, SalePriceMM, SpecialCH, SpecialMM)
dat$StoreID <- as.factor(dat$StoreID)
cor(dat)
library(ISLR)
library(MASS)
library(dplyr)
dat <- OJ # Purchase is a binary qualitative variable
dat <- dat %>%
dplyr::select(Purchase, WeekofPurchase, StoreID, DiscCH, DiscMM, LoyalCH, SalePriceCH, SalePriceMM, SpecialCH, SpecialMM)
dat$StoreID <- as.factor(dat$StoreID)
cor(dat[,-3])
library(ISLR)
library(MASS)
library(dplyr)
dat <- OJ # Purchase is a binary qualitative variable
dat <- dat %>%
dplyr::select(Purchase, WeekofPurchase, StoreID, DiscCH, DiscMM, LoyalCH, SalePriceCH, SalePriceMM, SpecialCH, SpecialMM)
dat$StoreID <- as.factor(dat$StoreID)
cor(dat[,-1-3])
library(ISLR)
library(MASS)
library(dplyr)
dat <- OJ # Purchase is a binary qualitative variable
dat <- dat %>%
dplyr::select(Purchase, WeekofPurchase, StoreID, DiscCH, DiscMM, LoyalCH, SalePriceCH, SalePriceMM, SpecialCH, SpecialMM)
dat$StoreID <- as.factor(dat$StoreID)
dat$SpecialCH <- as.factor(dat$SpecialCH)
dat$SpecialMM <- as.factor(dat$SpecialMM)
ncol(dat)
# Make the first 800 observations to be training set.
training_dat <- dat[1:800,]
test_dat <- dat[801:1070,]
# LDA
lda.fit <- lda(data=training_dat, Purchase~.)
lda.fit
# training error
train_err <- sum(predict(lda.fit, newdata=training_dat)$class!=training_dat$Purchase)/nrow(training_dat)
print(paste('The training error is ', train_err))
# testing error
test_err <- sum(predict(lda.fit, newdata=test_dat)$class!=test_dat$Purchase)/nrow(test_dat)
print(paste('The test error is ', test_err))
plot(lda.fit)
qda.fit <- qda(data=training_dat, Purchase~.)
qda.fit
# training error
train_err <- sum(predict(qda.fit, newdata=training_dat)$class!=training_dat$Purchase)/nrow(training_dat)
print(paste('The training error is ', train_err))
# testing error
test_err <- sum(predict(qda.fit, newdata=test_dat)$class!=test_dat$Purchase)/nrow(test_dat)
print(paste('The test error is ', test_err))
# training error
lda.train_err <- sum(predict(lda.fit, newdata=training_dat)$class!=training_dat$Purchase)/nrow(training_dat)
print('Linear Discriminant Analysis')
print(paste('The training error is ', lda.train_err))
# testing error
lda.test_err <- sum(predict(lda.fit, newdata=test_dat)$class!=test_dat$Purchase)/nrow(test_dat)
print(paste('The test error is ', lda.test_err))
# training error
lda.train_err <- sum(predict(lda.fit, newdata=training_dat)$class!=training_dat$Purchase)/nrow(training_dat)
print('Linear Discriminant Analysis:')
print(paste('The training error is ', lda.train_err))
# testing error
lda.test_err <- sum(predict(lda.fit, newdata=test_dat)$class!=test_dat$Purchase)/nrow(test_dat)
print(paste('The test error is ', lda.test_err))
# training error
qda.train_err <- sum(predict(qda.fit, newdata=training_dat)$class!=training_dat$Purchase)/nrow(training_dat)
print('Quadratic Discriminant Analysis:')
print(paste('The training error is ', qda.train_err))
# testing error
qda.test_err <- sum(predict(qda.fit, newdata=test_dat)$class!=test_dat$Purchase)/nrow(test_dat)
print(paste('The test error is ', qda.test_err))
glm.fit <- (data=training_dat, Purchase~.)
glm.fit <- glm(data=training_dat, Purchase~.)
glm.fit <- glm(data=training_dat, Purchase~., family=binomial)
glm.fit
# training error
glm.train_err <- sum(predict(glm.fit, newdata=training_dat)$class!=training_dat$Purchase)/nrow(training_dat)
predict(glm.fit, newdata=training_dat)
predict(glm.fit, newdata=training_dat,type='response')
predict(glm.fit, newdata=training_dat,type='response') > 0.5
predict(glm.fit, newdata=training_dat,type='response') > 0.5!=training_dat$Purchase
(predict(glm.fit, newdata=training_dat,type='response') > 0.5)!=training_dat$Purchase
# training error
train_prediction <- predict(glm.fit, newdata=training_dat,type='response') > 0.5
glm.train_err <- sum(train_prediction!=(training_dat$Purchase=='CH'))/nrow(training_dat)
print('Logistic Regression:')
print(paste('The training error is ', glm.train_err))
# testing error
train_prediction <- predict(glm.fit, newdata=test_dat,type='response') > 0.5
glm.train_err <- sum(train_prediction!=(test_dat$Purchase=='CH'))/nrow(test)dat
# training error
train_prediction <- predict(glm.fit, newdata=training_dat,type='response') > 0.5
glm.train_err <- sum(train_prediction!=(training_dat$Purchase=='CH'))/nrow(training_dat)
print('Logistic Regression:')
print(paste('The training error is ', glm.train_err))
# testing error
test_prediction <- predict(glm.fit, newdata=test_dat,type='response') > 0.5
glm.train_err <- sum(test_prediction!=(test_dat$Purchase=='CH'))/nrow(test)dat
# training error
train_prediction <- predict(glm.fit, newdata=training_dat,type='response') > 0.5
glm.train_err <- sum(train_prediction!=(training_dat$Purchase=='MM'))/nrow(training_dat)
print('Logistic Regression:')
print(paste('The training error is ', glm.train_err))
# testing error
test_prediction <- predict(glm.fit, newdata=test_dat,type='response') > 0.5
glm.train_err <- sum(test_prediction!=(test_dat$Purchase=='MM'))/nrow(test)dat
# training error
train_prediction <- predict(glm.fit, newdata=training_dat,type='response') > 0.5
glm.train_err <- sum(train_prediction!=(training_dat$Purchase=='MM'))/nrow(training_dat)
print('Logistic Regression:')
print(paste('The training error is ', glm.train_err))
# testing error
test_prediction <- predict(glm.fit, newdata=test_dat,type='response') > 0.5
glm.train_err <- sum(test_prediction!=(test_dat$Purchase=='MM'))/nrow(test_dat)
print(paste('The test error is ', glm.test_err))
# training error
train_prediction <- predict(glm.fit, newdata=training_dat,type='response') > 0.5
glm.train_err <- sum(train_prediction!=(training_dat$Purchase=='MM'))/nrow(training_dat)
print('Logistic Regression:')
print(paste('The training error is ', glm.train_err))
# testing error
test_prediction <- predict(glm.fit, newdata=test_dat,type='response') > 0.5
glm.test_err <- sum(test_prediction!=(test_dat$Purchase=='MM'))/nrow(test_dat)
print(paste('The test error is ', glm.test_err))
# training error
train_prediction <- predict(glm.fit, newdata=training_dat,type='response') > 0.5
glm.train_err <- sum(train_prediction!=(training_dat$Purchase=='MM'))/nrow(training_dat)
print('Logistic Regression:')
print(paste('The training error is ', glm.train_err))
# testing error
test_prediction <- predict(glm.fit, newdata=test_dat,type='response') > 0.5
glm.test_err <- sum(test_prediction!=(test_dat$Purchase=='MM'))/nrow(test_dat)
print(paste('The test error is ', glm.test_err))
?knn
library(class)
?knn
library(class)
knn.train <- training_dat[,-1]
knn.test <- test_dat[,-1]
knn.label <- training_dat[,1]
knn.train_prediction <- knn(knn.train, knn.train, knn.label,k=3)
knn.train_prediction
test_prediction!=(test_dat$Purchase=='MM')
mean(test_prediction!=(test_dat$Purchase=='MM'))
glm.fit <- glm(data=training_dat, Purchase~., family=binomial)
glm.fit
# training error
train_prediction <- predict(glm.fit, newdata=training_dat,type='response') > 0.5
glm.train_err <- mean(train_prediction!=(training_dat$Purchase=='MM'))
print('Logistic Regression:')
print(paste('The training error is ', glm.train_err))
# testing error
test_prediction <- predict(glm.fit, newdata=test_dat,type='response') > 0.5
glm.test_err <- mean(test_prediction!=(test_dat$Purchase=='MM'))
print(paste('The test error is ', glm.test_err))
# training error
qda.train_err <- mean(predict(qda.fit, newdata=training_dat)$class!=training_dat$Purchase)
print('Quadratic Discriminant Analysis:')
print(paste('The training error is ', qda.train_err))
# testing error
qda.test_err <- mean(predict(qda.fit, newdata=test_dat)$class!=test_dat$Purchase)
print(paste('The test error is ', qda.test_err))
# training error
lda.train_err <- mean(predict(lda.fit, newdata=training_dat)$class!=training_dat$Purchase)
print('Linear Discriminant Analysis:')
print(paste('The training error is ', lda.train_err))
# testing error
lda.test_err <- mean(predict(lda.fit, newdata=test_dat)$class!=test_dat$Purchase)
print(paste('The test error is ', lda.test_err))
library(class)
knn.train <- training_dat[,-1]
knn.test <- test_dat[,-1]
knn.label <- training_dat[,1]
knn.train_prediction <- knn(knn.train, knn.train, knn.label,k=3)
knn.train_err <- mean(knn.train_prediction != knn.label)
print('KNN Classification:')
print(paste('The training error is ', knn.train_err))
library(class)
knn.train <- training_dat[,-1]
knn.test <- test_dat[,-1]
knn.label <- training_dat[,1]
knn.train_prediction <- knn(knn.train, knn.train, knn.label,k=5)
knn.train_err <- mean(knn.train_prediction != knn.label)
print('KNN Classification:')
print(paste('The training error is ', knn.train_err))
library(class)
knn.train <- training_dat[,-1]
knn.test <- test_dat[,-1]
knn.label <- training_dat[,1]
knn.train_prediction <- knn(knn.train, knn.train, knn.label,k=1)
knn.train_err <- mean(knn.train_prediction != knn.label)
print('KNN Classification:')
print(paste('The training error is ', knn.train_err))
library(class)
knn.train <- training_dat[,-1]
knn.test <- test_dat[,-1]
knn.label <- training_dat[,1]
knn.train_prediction <- knn(knn.train, knn.train, knn.label,k=1)
knn.train_err <- mean(knn.train_prediction != knn.label)
print('KNN Classification:')
print(paste('The training error is ', knn.train_err))
knn.test_prediction <- knn(knn.train, knn.test, knn.label, k=1)
knn.test_err <- mean(knn.test_prediction != test_dat$Purchase)
print((paste('The test error is ', knn.test_err))
library(class)
knn.train <- training_dat[,-1]
knn.test <- test_dat[,-1]
knn.label <- training_dat[,1]
knn.train_prediction <- knn(knn.train, knn.train, knn.label,k=1)
knn.train_err <- mean(knn.train_prediction != knn.label)
print('KNN Classification:')
print(paste('The training error is ', knn.train_err))
knn.test_prediction <- knn(knn.train, knn.test, knn.label, k=1)
knn.test_err <- mean(knn.test_prediction != test_dat$Purchase)
print(paste('The test error is ', knn.test_err))
library(class)
knn.train <- training_dat[,-1]
knn.test <- test_dat[,-1]
knn.label <- training_dat[,1]
knn.train_prediction <- knn(knn.train, knn.train, knn.label,k=2)
knn.train_err <- mean(knn.train_prediction != knn.label)
print('KNN Classification:')
print(paste('The training error is ', knn.train_err))
knn.test_prediction <- knn(knn.train, knn.test, knn.label, k=2)
knn.test_err <- mean(knn.test_prediction != test_dat$Purchase)
print(paste('The test error is ', knn.test_err))
library(class)
knn.train <- training_dat[,-1]
knn.test <- test_dat[,-1]
knn.label <- training_dat[,1]
knn.train_prediction <- knn(knn.train, knn.train, knn.label,k=3)
knn.train_err <- mean(knn.train_prediction != knn.label)
print('KNN Classification:')
print(paste('The training error is ', knn.train_err))
knn.test_prediction <- knn(knn.train, knn.test, knn.label, k=3)
knn.test_err <- mean(knn.test_prediction != test_dat$Purchase)
print(paste('The test error is ', knn.test_err))
library(class)
knn.train <- training_dat[,-1]
knn.test <- test_dat[,-1]
knn.label <- training_dat[,1]
knn.train_prediction <- knn(knn.train, knn.train, knn.label,k=5)
knn.train_err <- mean(knn.train_prediction != knn.label)
print('KNN Classification:')
print(paste('The training error is ', knn.train_err))
knn.test_prediction <- knn(knn.train, knn.test, knn.label, k=5)
knn.test_err <- mean(knn.test_prediction != test_dat$Purchase)
print(paste('The test error is ', knn.test_err))
library(class)
knn.train <- training_dat[,-1]
knn.test <- test_dat[,-1]
knn.label <- training_dat[,1]
knn.train_prediction <- knn(knn.train, knn.train, knn.label,k=7)
knn.train_err <- mean(knn.train_prediction != knn.label)
print('KNN Classification:')
print(paste('The training error is ', knn.train_err))
knn.test_prediction <- knn(knn.train, knn.test, knn.label, k=7)
knn.test_err <- mean(knn.test_prediction != test_dat$Purchase)
print(paste('The test error is ', knn.test_err))
library(class)
knn.train <- training_dat[,-1]
knn.test <- test_dat[,-1]
knn.label <- training_dat[,1]
knn.train_prediction <- knn(knn.train, knn.train, knn.label,k=1)
knn.train_err <- mean(knn.train_prediction != knn.label)
print('KNN Classification:')
print(paste('The training error is ', knn.train_err))
knn.test_prediction <- knn(knn.train, knn.test, knn.label, k=1)
knn.test_err <- mean(knn.test_prediction != test_dat$Purchase)
print(paste('The test error is ', knn.test_err))
library(class)
knn.train <- training_dat[,-1]
knn.test <- test_dat[,-1]
knn.label <- training_dat[,1]
knn.train_prediction <- knn(knn.train, knn.train, knn.label,k=2)
knn.train_err <- mean(knn.train_prediction != knn.label)
print('KNN Classification:')
print(paste('The training error is ', knn.train_err))
knn.test_prediction <- knn(knn.train, knn.test, knn.label, k=2)
knn.test_err <- mean(knn.test_prediction != test_dat$Purchase)
print(paste('The test error is ', knn.test_err))
library(class)
knn.train <- training_dat[,-1]
knn.test <- test_dat[,-1]
knn.label <- training_dat[,1]
knn.train_prediction <- knn(knn.train, knn.train, knn.label,k=3)
knn.train_err <- mean(knn.train_prediction != knn.label)
print('KNN Classification:')
print(paste('The training error is ', knn.train_err))
knn.test_prediction <- knn(knn.train, knn.test, knn.label, k=3)
knn.test_err <- mean(knn.test_prediction != test_dat$Purchase)
print(paste('The test error is ', knn.test_err))
library(class)
knn.train <- training_dat[,-1]
knn.test <- test_dat[,-1]
knn.label <- training_dat[,1]
knn.train_prediction <- knn(knn.train, knn.train, knn.label,k=4)
knn.train_err <- mean(knn.train_prediction != knn.label)
print('KNN Classification:')
print(paste('The training error is ', knn.train_err))
knn.test_prediction <- knn(knn.train, knn.test, knn.label, k=4)
knn.test_err <- mean(knn.test_prediction != test_dat$Purchase)
print(paste('The test error is ', knn.test_err))
library(class)
knn.train <- training_dat[,-1]
knn.test <- test_dat[,-1]
knn.label <- training_dat[,1]
knn.train_prediction <- knn(knn.train, knn.train, knn.label,k=6)
knn.train_err <- mean(knn.train_prediction != knn.label)
print('KNN Classification:')
print(paste('The training error is ', knn.train_err))
knn.test_prediction <- knn(knn.train, knn.test, knn.label, k=6)
knn.test_err <- mean(knn.test_prediction != test_dat$Purchase)
print(paste('The test error is ', knn.test_err))
library(class)
knn.train <- training_dat[,-1]
knn.test <- test_dat[,-1]
knn.label <- training_dat[,1]
knn.train_prediction <- knn(knn.train, knn.train, knn.label,k=7)
knn.train_err <- mean(knn.train_prediction != knn.label)
print('KNN Classification:')
print(paste('The training error is ', knn.train_err))
knn.test_prediction <- knn(knn.train, knn.test, knn.label, k=7)
knn.test_err <- mean(knn.test_prediction != test_dat$Purchase)
print(paste('The test error is ', knn.test_err))
library(class)
knn.train <- training_dat[,-1]
knn.test <- test_dat[,-1]
knn.label <- training_dat[,1]
knn.train_prediction <- knn(knn.train, knn.train, knn.label,k=8)
knn.train_err <- mean(knn.train_prediction != knn.label)
print('KNN Classification:')
print(paste('The training error is ', knn.train_err))
knn.test_prediction <- knn(knn.train, knn.test, knn.label, k=8)
knn.test_err <- mean(knn.test_prediction != test_dat$Purchase)
print(paste('The test error is ', knn.test_err))
library(class)
knn.train <- training_dat[,-1]
knn.test <- test_dat[,-1]
knn.label <- training_dat[,1]
knn.train_prediction <- knn(knn.train, knn.train, knn.label,k=9)
knn.train_err <- mean(knn.train_prediction != knn.label)
print('KNN Classification:')
print(paste('The training error is ', knn.train_err))
knn.test_prediction <- knn(knn.train, knn.test, knn.label, k=9)
knn.test_err <- mean(knn.test_prediction != test_dat$Purchase)
print(paste('The test error is ', knn.test_err))
library(class)
knn.train <- training_dat[,-1]
knn.test <- test_dat[,-1]
knn.label <- training_dat[,1]
knn.train_prediction <- knn(knn.train, knn.train, knn.label,k=5)
knn.train_err <- mean(knn.train_prediction != knn.label)
print('KNN Classification:')
print(paste('The training error is ', knn.train_err))
knn.test_prediction <- knn(knn.train, knn.test, knn.label, k=5)
knn.test_err <- mean(knn.test_prediction != test_dat$Purchase)
print(paste('The test error is ', knn.test_err))
?data.frame
data.frame(row.names=c('Train Error', 'Test Error'),
LDA = c(lda.train_err, lda.test_err),
QDA = c(qda.train_err, qda.test_err),
LOGISTIC = c(glm.train_err, glm.test_err),
KNN = c(knn.train_err, knn.test_err))
data.frame(row.names=c('Train Error', 'Test Error'),
LDA = c(lda.train_err, lda.test_err),
QDA = c(qda.train_err, qda.test_err),
LOGISTIC = c(glm.train_err, glm.test_err),
KNN = c(knn.train_err, knn.test_err))
data.frame(row.names=c('Train Error', 'Test Error'),
LDA = c(lda.train_err, lda.test_err),
QDA = c(qda.train_err, qda.test_err),
LOGISTIC = c(glm.train_err, glm.test_err),
KNN(k=5) = c(knn.train_err, knn.test_err))
data.frame(row.names=c('Train Error', 'Test Error'),
LDA = c(lda.train_err, lda.test_err),
QDA = c(qda.train_err, qda.test_err),
LOGISTIC = c(glm.train_err, glm.test_err),
5NN = c(knn.train_err, knn.test_err))
data.frame(row.names=c('Train Error', 'Test Error'),
LDA = c(lda.train_err, lda.test_err),
QDA = c(qda.train_err, qda.test_err),
LOGISTIC = c(glm.train_err, glm.test_err),
KNN = c(knn.train_err, knn.test_err))
