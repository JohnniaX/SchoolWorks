knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
dat <- rock
plt <- ggplot() + geom_point(aes(dat$peri, dat$area))
plt
n <- nrow(dat)
cv.n <- 100
k <- 3
cv.index <- sample(n, n, replace=F)%%k
cv.index
n <- nrow(dat)
cv.n <- 100
k <- 3
set.seed(403)
cv.index <- sample(n, n, replace=F)%%k
cv.index
n <- nrow(dat)
cv.n <- 100
k <- 3
set.seed(403)
cv.index <- sample(n, n, replace=F)%%k
h.seq <- c((1:20)/500)
h.seq
n <- nrow(dat)
cv.n <- 100
k <- 3
set.seed(403)
cv.index <- sample(n, n, replace=F)%%k
h.seq <- seq(from=250,to=10000,by=250)
h.seq
n <- nrow(dat)
cv.n <- 100
k <- 3
set.seed(403)
h.seq <- seq(from=250,to=10000,by=250)
cv.er <- rep(0, length(h.seq))
for (i in 1:cv.n) {
cv.err_temp <- rep(0, length(h.seq))
cv.index <- sample(n, n, replace=F) %% k
for (j in 1:length(h.seq)) {
h0 <- h.seq[j]
err <- 0
for (kk in 1:k) {
w <- which(cv.index==(kk-1))
train.dat <- dat[-w]
test.dat <- dat[w]
model <- ksmooth(x=train.dat$peri,
y=train.dat$area,
kernel='normal',
bandwidth=h0,
x.points=test.dat$peri)
err <- err + mean((test.dat[order(test.dat$peri)]$area-
model$y)^2, na.rm=T)
}
cv.err_temp[j] <- err/k
}
cv.err <- cv.err + cv.err_temp
}
n <- nrow(dat)
cv.n <- 100
k <- 3
set.seed(403)
h.seq <- seq(from=250,to=10000,by=250)
cv.er <- rep(0, length(h.seq))
for (i in 1:cv.n) {
cv.err_temp <- rep(0, length(h.seq))
cv.index <- sample(n, n, replace=F) %% k
for (j in 1:length(h.seq)) {
h0 <- h.seq[j]
err <- 0
for (kk in 1:k) {
w <- which(cv.index==(kk-1))
train.dat <- dat[-w,]
test.dat <- dat[w,]
model <- ksmooth(x=train.dat$peri,
y=train.dat$area,
kernel='normal',
bandwidth=h0,
x.points=test.dat$peri)
err <- err + mean((test.dat[order(test.dat$peri)]$area-
model$y)^2, na.rm=T)
}
cv.err_temp[j] <- err/k
}
cv.err <- cv.err + cv.err_temp
}
View(test.dat)
n <- nrow(dat)
cv.n <- 100
k <- 3
set.seed(403)
h.seq <- seq(from=250,to=10000,by=250)
cv.er <- rep(0, length(h.seq))
for (i in 1:cv.n) {
cv.err_temp <- rep(0, length(h.seq))
cv.index <- sample(n, n, replace=F) %% k
for (j in 1:length(h.seq)) {
h0 <- h.seq[j]
err <- 0
for (kk in 1:k) {
w <- which(cv.index==(kk-1))
train.dat <- dat[-w,]
train.x <- train.dat$peri
trian.y <- train.dat$area
test.dat <- dat[w,]
test.x <- test.dat$peri
test.y <- test.dat$area
model <- ksmooth(x=train.x,
y=train.y,
kernel='normal',
bandwidth=h0,
x.points=test.x)
err <- err + mean((test.y[order(test.x)] -
model$y)^2, na.rm=T)
}
cv.err_temp[j] <- err/k
}
cv.err <- cv.err + cv.err_temp
}
n <- nrow(dat)
cv.n <- 100
k <- 3
set.seed(403)
h.seq <- seq(from=250,to=10000,by=250)
cv.er <- rep(0, length(h.seq))
for (i in 1:cv.n) {
cv.err_temp <- rep(0, length(h.seq))
cv.index <- sample(n, n, replace=F) %% k
for (j in 1:length(h.seq)) {
h0 <- h.seq[j]
err <- 0
for (kk in 1:k) {
w <- which(cv.index==(kk-1))
train.dat <- dat[-w,]
train.x <- train.dat$peri
train.y <- train.dat$area
test.dat <- dat[w,]
test.x <- test.dat$peri
test.y <- test.dat$area
model <- ksmooth(x=train.x,
y=train.y,
kernel='normal',
bandwidth=h0,
x.points=test.x)
err <- err + mean((test.y[order(test.x)] -
model$y)^2, na.rm=T)
}
cv.err_temp[j] <- err/k
}
cv.err <- cv.err + cv.err_temp
}
n <- nrow(dat)
cv.n <- 100
k <- 3
set.seed(403)
h.seq <- seq(from=250,to=10000,by=250)
cv.err <- rep(0, length(h.seq))
for (i in 1:cv.n) {
cv.err_temp <- rep(0, length(h.seq))
cv.index <- sample(n, n, replace=F) %% k
for (j in 1:length(h.seq)) {
h0 <- h.seq[j]
err <- 0
for (kk in 1:k) {
w <- which(cv.index==(kk-1))
train.dat <- dat[-w,]
train.x <- train.dat$peri
train.y <- train.dat$area
test.dat <- dat[w,]
test.x <- test.dat$peri
test.y <- test.dat$area
model <- ksmooth(x=train.x,
y=train.y,
kernel='normal',
bandwidth=h0,
x.points=test.x)
err <- err + mean((test.y[order(test.x)] -
model$y)^2, na.rm=T)
}
cv.err_temp[j] <- err/k
}
cv.err <- cv.err + cv.err_temp
}
cv.err <- cv.err/cv.n
df <- data.frame(h=h.seq, err=cv.err)
ggplot(df, aes(h, err)) + geom_line(lwd=1) + geom_point() +
xlab('Smoothing Bandwidth') + ylab('CV Error')
n <- nrow(dat)
cv.n <- 100
k <- 3
set.seed(403)
h.seq <- seq(from=0,to=5000,by=100)
cv.err <- rep(0, length(h.seq))
for (i in 1:cv.n) {
cv.err_temp <- rep(0, length(h.seq))
cv.index <- sample(n, n, replace=F) %% k
for (j in 1:length(h.seq)) {
h0 <- h.seq[j]
err <- 0
for (kk in 1:k) {
w <- which(cv.index==(kk-1))
train.dat <- dat[-w,]
train.x <- train.dat$peri
train.y <- train.dat$area
test.dat <- dat[w,]
test.x <- test.dat$peri
test.y <- test.dat$area
model <- ksmooth(x=train.x,
y=train.y,
kernel='normal',
bandwidth=h0,
x.points=test.x)
err <- err + mean((test.y[order(test.x)] -
model$y)^2, na.rm=T)
}
cv.err_temp[j] <- err/k
}
cv.err <- cv.err + cv.err_temp
}
cv.err <- cv.err/cv.n
df <- data.frame(h=h.seq, err=cv.err)
ggplot(df, aes(h, err)) + geom_line(lwd=1) + geom_point() +
xlab('Smoothing Bandwidth') + ylab('CV Error')
n <- nrow(dat)
cv.n <- 100
k <- 3
set.seed(403)
h.seq <- seq(from=0,to=1000,by=50)
cv.err <- rep(0, length(h.seq))
for (i in 1:cv.n) {
cv.err_temp <- rep(0, length(h.seq))
cv.index <- sample(n, n, replace=F) %% k
for (j in 1:length(h.seq)) {
h0 <- h.seq[j]
err <- 0
for (kk in 1:k) {
w <- which(cv.index==(kk-1))
train.dat <- dat[-w,]
train.x <- train.dat$peri
train.y <- train.dat$area
test.dat <- dat[w,]
test.x <- test.dat$peri
test.y <- test.dat$area
model <- ksmooth(x=train.x,
y=train.y,
kernel='normal',
bandwidth=h0,
x.points=test.x)
err <- err + mean((test.y[order(test.x)] -
model$y)^2, na.rm=T)
}
cv.err_temp[j] <- err/k
}
cv.err <- cv.err + cv.err_temp
}
cv.err <- cv.err/cv.n
df <- data.frame(h=h.seq, err=cv.err)
ggplot(df, aes(h, err)) + geom_line(lwd=1) + geom_point() +
xlab('Smoothing Bandwidth') + ylab('CV Error')
n <- nrow(dat)
cv.n <- 100
k <- 3
set.seed(403)
h.seq <- seq(from=0,to=1000,by=10)
cv.err <- rep(0, length(h.seq))
for (i in 1:cv.n) {
cv.err_temp <- rep(0, length(h.seq))
cv.index <- sample(n, n, replace=F) %% k
for (j in 1:length(h.seq)) {
h0 <- h.seq[j]
err <- 0
for (kk in 1:k) {
w <- which(cv.index==(kk-1))
train.dat <- dat[-w,]
train.x <- train.dat$peri
train.y <- train.dat$area
test.dat <- dat[w,]
test.x <- test.dat$peri
test.y <- test.dat$area
model <- ksmooth(x=train.x,
y=train.y,
kernel='normal',
bandwidth=h0,
x.points=test.x)
err <- err + mean((test.y[order(test.x)] -
model$y)^2, na.rm=T)
}
cv.err_temp[j] <- err/k
}
cv.err <- cv.err + cv.err_temp
}
cv.err <- cv.err/cv.n
df <- data.frame(h=h.seq, err=cv.err)
ggplot(df, aes(h, err)) + geom_line(lwd=1) + geom_point() +
xlab('Smoothing Bandwidth') + ylab('CV Error')
n <- nrow(dat)
cv.n <- 100
k <- 3
set.seed(403)
h.seq <- seq(from=100,to=1000,by=20)
cv.err <- rep(0, length(h.seq))
for (i in 1:cv.n) {
cv.err_temp <- rep(0, length(h.seq))
cv.index <- sample(n, n, replace=F) %% k
for (j in 1:length(h.seq)) {
h0 <- h.seq[j]
err <- 0
for (kk in 1:k) {
w <- which(cv.index==(kk-1))
train.dat <- dat[-w,]
train.x <- train.dat$peri
train.y <- train.dat$area
test.dat <- dat[w,]
test.x <- test.dat$peri
test.y <- test.dat$area
model <- ksmooth(x=train.x,
y=train.y,
kernel='normal',
bandwidth=h0,
x.points=test.x)
err <- err + mean((test.y[order(test.x)] -
model$y)^2, na.rm=T)
}
cv.err_temp[j] <- err/k
}
cv.err <- cv.err + cv.err_temp
}
cv.err <- cv.err/cv.n
df <- data.frame(h=h.seq, err=cv.err)
ggplot(df, aes(h, err)) + geom_line(lwd=1) + geom_point() +
xlab('Smoothing Bandwidth') + ylab('CV Error')
cv,err
cv.err
n <- nrow(dat)
cv.n <- 100
k <- 3
set.seed(403)
h.seq <- seq(from=100,to=1000,by=20)
cv.err <- rep(0, length(h.seq))
for (i in 1:cv.n) {
cv.err_temp <- rep(0, length(h.seq))
cv.index <- sample(n, n, replace=F) %% k
for (j in 1:length(h.seq)) {
h0 <- h.seq[j]
err <- 0
for (kk in 1:k) {
w <- which(cv.index==(kk-1))
train.dat <- dat[-w,]
train.x <- train.dat$peri
train.y <- train.dat$area
test.dat <- dat[w,]
test.x <- test.dat$peri
test.y <- test.dat$area
model <- ksmooth(x=train.x,
y=train.y,
kernel='normal',
bandwidth=h0,
x.points=test.x)
err <- err + mean((test.y -
model$y)^2, na.rm=T)
}
cv.err_temp[j] <- err/k
}
cv.err <- cv.err + cv.err_temp
}
cv.err <- cv.err/cv.n
df <- data.frame(h=h.seq, err=cv.err)
ggplot(df, aes(h, err)) + geom_line(lwd=1) + geom_point() +
xlab('Smoothing Bandwidth') + ylab('CV Error')
n <- nrow(dat)
cv.n <- 100
k <- 3
set.seed(403)
h.seq <- seq(from=100,to=1000,by=20)
cv.err <- rep(0, length(h.seq))
for (i in 1:cv.n) {
cv.err_temp <- rep(0, length(h.seq))
cv.index <- sample(n, n, replace=F) %% k
for (j in 1:length(h.seq)) {
h0 <- h.seq[j]
err <- 0
for (kk in 1:k) {
w <- which(cv.index==(kk-1))
train.dat <- dat[-w,]
train.x <- train.dat$peri
train.y <- train.dat$area
test.dat <- dat[w,]
test.x <- test.dat$peri
test.y <- test.dat$area
model <- ksmooth(x=train.x,
y=train.y,
kernel='normal',
bandwidth=h0,
x.points=test.x)
err <- err + mean((test.y[order(test.x)] -
model$y)^2, na.rm=T)
}
cv.err_temp[j] <- err/k
}
cv.err <- cv.err + cv.err_temp
}
cv.err <- cv.err/cv.n
df <- data.frame(h=h.seq, err=cv.err)
ggplot(df, aes(h, err)) + geom_line(lwd=1) + geom_point() +
xlab('Smoothing Bandwidth') + ylab('CV Error')
order(test.x)
test.y
test.x
View(df)
n <- nrow(dat)
cv.n <- 100
k <- 3
set.seed(403)
h.seq <- seq(from=100,to=1000,by=20)
cv.err <- rep(0, length(h.seq))
for (i in 1:cv.n) {
cv.err_temp <- rep(0, length(h.seq))
cv.index <- sample(n, n, replace=F) %% k
for (j in 1:length(h.seq)) {
h0 <- h.seq[j]
err <- 0
for (kk in 1:k) {
w <- which(cv.index==(kk-1))
train.dat <- dat[-w,]
train.x <- train.dat$peri
train.y <- train.dat$area
test.dat <- dat[w,]
test.x <- test.dat$peri
test.y <- test.dat$area
model <- ksmooth(x=train.x,
y=train.y,
kernel='normal',
bandwidth=h0,
x.points=test.x)
err <- err + mean((test.y[order(test.x)] -
model$y)^2, na.rm=T)
}
cv.err_temp[j] <- err/k
}
cv.err <- cv.err + cv.err_temp
}
cv.err <- cv.err/cv.n
df <- data.frame(h=h.seq, err=cv.err)
ggplot(df, aes(h, err)) + geom_line(lwd=1) + geom_point() +
xlab('Smoothing Bandwidth') + ylab('CV Error')
print(paste('The optimized bandwidth value h=',
h.seq[which(cv.err==min(cv.err))]))
cv.err
min(cv.err)
