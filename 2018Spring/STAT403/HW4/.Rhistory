interval[2]
interval <- confint(model, 'stations', level=0.95)
print(paste('The 95% confidence interval of the fitted slope is [', interval[1], ', ', interval[2], '].'))
interval <- confint(model, 'stations', level=0.95)
print(paste('The 95% confidence interval of the fitted slope is [', interval[1], ',', interval[2], '].'))
a = [1,2,3,4,5]
a = rep(0, N)
a[2] = 1
a[3] = 2
a = rep(0, 5)
a[1] = 1
a[2] = 2
a[3] = 3
a[1:3]
var(a[1:3])
N <- 2000
b1 <- rep(0, N)
bi.var <- rep(0, N)
n <- 2000
set.seed(403)
for (i in 1:N) {
x <- rnorm(n, mean=0, sd=1)
p <- exp(1+2*x)/(1 + exp(1+2*x))
model.fit <- glm(rbinom(n,1,p)~x, family=binomial)
b1[i] <- model.fit$coefficients[2]
bi.var[i] <- var(b1[1:i])
}
ggplot() + geom_line(aes(x=1:N, y=bi.var))
N <- 2000
b1 <- rep(0, N)
bi.var <- rep(0, N)
n <- 2000
set.seed(403)
for (i in 1:N) {
x <- rnorm(n, mean=0, sd=1)
p <- exp(1+2*x)/(1 + exp(1+2*x))
model.fit <- glm(rbinom(n,1,p)~x, family=binomial)
b1[i] <- model.fit$coefficients[2]
if (i >= 2) {
bi.var[i] <- var(b1[1:i])
}
}
ggplot() + geom_line(aes(x=1:N, y=bi.var))
bi.var[end]
bi.var[length(bi.var)]
N <- 2000
b1 <- rep(0, N)
bi.var <- rep(0, N)
n <- 2000
set.seed(403)
for (i in 1:N) {
x <- rnorm(n, mean=0, sd=1)
p <- exp(1+2*x)/(1 + exp(1+2*x))
model.fit <- glm(rbinom(n,1,p)~x, family=binomial)
b1[i] <- model.fit$coefficients[2]
if (i >= 2) {
bi.var[i] <- var(b1[1:i])
}
}
ggplot() + geom_line(aes(x=1:N, y=bi.var), color='coral4') + geom_hline(yintercept=0.008, color='darkred', size=1.3) + xlab('Sample size') + ylab('Variance of beta_1') + annotate('text', x=1000, y=0.06, label='var(beta_1) = 0.008')
N <- 2000
b1 <- rep(0, N)
bi.var <- rep(0, N)
n <- 2000
set.seed(403)
for (i in 1:N) {
x <- rnorm(n, mean=0, sd=1)
p <- exp(1+2*x)/(1 + exp(1+2*x))
model.fit <- glm(rbinom(n,1,p)~x, family=binomial)
b1[i] <- model.fit$coefficients[2]
if (i >= 2) {
bi.var[i] <- var(b1[1:i])
}
}
ggplot() + geom_line(aes(x=1:N, y=bi.var), color='coral4') + geom_hline(yintercept=0.008, color='darkred', size=1.1) + xlab('Sample size') + ylab('Variance of beta_1') + annotate('text', x=1000, y=0.006, label='var(beta_1) = 0.008')
N <- 2000
b1 <- rep(0, N)
bi.var <- rep(0, N)
n <- 2000
set.seed(403)
for (i in 1:N) {
x <- rnorm(n, mean=0, sd=1)
p <- exp(1+2*x)/(1 + exp(1+2*x))
model.fit <- glm(rbinom(n,1,p)~x, family=binomial)
b1[i] <- model.fit$coefficients[2]
if (i >= 2) {
bi.var[i] <- var(b1[1:i])
}
}
ggplot() + geom_line(aes(x=1:N, y=bi.var), color='coral4') + geom_hline(yintercept=0.0088, color='darkred', size=1.1) + xlab('Sample size') + ylab('Variance of beta_1') + annotate('text', x=1000, y=0.007, label='var(beta_1) = 0.008')
ggplot() + geom_line(aes(x=1:N, y=bi.var), color='coral4') + geom_hline(yintercept=0.0088, color='thistle') + xlab('Sample size') + ylab('Variance of beta_1') + annotate('text', x=1000, y=0.007, label='var(beta_1) = 0.008')
ggplot() + geom_line(aes(x=1:N, y=bi.var), color='coral4') + geom_hline(yintercept=0.0088, color='thistle') + xlab('Sample size') + ylab('Variance of beta_1') + annotate('text', x=1000, y=0.008, label='var(beta_1) = 0.008')
ggplot() + geom_line(aes(x=1:N, y=bi.var), color='coral4') + geom_hline(yintercept=0.0088, color='azure') + xlab('Sample size') + ylab('Variance of beta_1') + annotate('text', x=1000, y=0.008, label='var(beta_1) = 0.008')
knitr::opts_chunk$set(echo = TRUE)
n <- 500
set.seed(403)
x <- rnorm(n, mean=0, sd=1)
p <- exp(1+2*x)/(1 + exp(1+2*x))
y <- rbinom(n,1,p)
model.fit <- glm(y~x, family=binomial)
model.fit
print(paste('The fitted parameter beta_0 is ', model.fit$coefficients[1]))
print(paste('The fitted parameter beta_1 is ', model.fit$coefficients[2]))
require(gridExtra)
N <- 2000
b0 <- rep(0, N)
b1 <- rep(0, N)
n <- 500
set.seed(403)
for (i in 1:N) {
x <- rnorm(n, mean=0, sd=1)
p <- exp(1+2*x)/(1 + exp(1+2*x))
model.fit <- glm(rbinom(n,1,p)~x, family=binomial)
b0[i] <- model.fit$coefficients[1]
b1[i] <- model.fit$coefficients[2]
}
ggplot() + geom_line(aes(x=1:N, y=bi.var), color='coral4') + geom_hline(yintercept=0.0088, color='cornflowerblue') + xlab('Sample size') + ylab('Variance of beta_1') + annotate('text', x=1000, y=0.008, label='var(beta_1) = 0.008')
N <- 20000
b1 <- rep(0, N)
bi.var <- rep(0, N)
n <- 2000
set.seed(403)
for (i in 1:N) {
x <- rnorm(n, mean=0, sd=1)
p <- exp(1+2*x)/(1 + exp(1+2*x))
model.fit <- glm(rbinom(n,1,p)~x, family=binomial)
b1[i] <- model.fit$coefficients[2]
if (i >= 2) {
bi.var[i] <- var(b1[1:i])
}
}
N <- 2000
b1 <- rep(0, N)
bi.var <- rep(0, N)
n <- 200
set.seed(403)
for (i in 1:N) {
x <- rnorm(n, mean=0, sd=1)
p <- exp(1+2*x)/(1 + exp(1+2*x))
model.fit <- glm(rbinom(n,1,p)~x, family=binomial)
b1[i] <- model.fit$coefficients[2]
if (i >= 2) {
bi.var[i] <- var(b1[1:i])
}
}
ggplot() + geom_line(aes(x=1:N, y=bi.var), color='coral4') + geom_hline(yintercept=0.0088, color='cornflowerblue') + xlab('Sample size') + ylab('Variance of beta_1') + annotate('text', x=1000, y=0.008, label='var(beta_1) = 0.008')
ggplot() + geom_line(aes(x=1:N, y=bi.var), color='coral4') + geom_hline(yintercept=0.1, color='cornflowerblue') + xlab('Sample size') + ylab('Variance of beta_1') + annotate('text', x=1000, y=0.1, label='var(beta_1) = 0.008')
bi.var
N <- 2000
b1 <- rep(0, N)
bi.var <- rep(0, N)
n <- 2000
set.seed(403)
for (i in 1:N) {
x <- rnorm(n, mean=0, sd=1)
p <- exp(1+2*x)/(1 + exp(1+2*x))
model.fit <- glm(rbinom(n,1,p)~x, family=binomial)
b1[i] <- model.fit$coefficients[2]
if (i >= 2) {
bi.var[i] <- var(b1[1:i])
}
}
bi.var[2:end]
bi.var[2:]
bi.var[-1]
ggplot() + geom_line(aes(x=2:N, y=bi.var[-1]), color='coral4') + geom_hline(yintercept=0.008, color='cornflowerblue') + xlab('Sample size') + ylab('Variance of beta_1') + annotate('text', x=1000, y=0.008, label='var(beta_1) = 0.008')
min(bi.var[-1])
max(bi.var[-1])
bi.var[length(bi.var)]
ggplot() + geom_line(aes(x=2:N, y=bi.var[-1]), color='coral4') + geom_hline(yintercept=0.0089, color='cornflowerblue') + xlab('Sample size') + ylab('Variance of beta_1') + annotate('text', x=1000, y=0.008, label='var(beta_1) = 0.0089')
ggplot() + geom_line(aes(x=2:N, y=bi.var[-1]), color='coral4') + geom_hline(yintercept=0.0088, color='cornflowerblue') + xlab('Sample size') + ylab('Variance of beta_1') + annotate('text', x=1000, y=0.008, label='var(beta_1) = 0.0088')
f <- function(x) {
return(exp(x)/(1+exp(x))^2)
}
sample_size <- 1000
x <- seq(from=-10, to=-10, length.out=sample_size)
print(paste('The mean of the random variable is ', mean(f(x))))
print(paste('The median of the random variable is ', mean(f(x))))
ggplot() + geom_line(aes(x=2:N, y=bi.var[-1]), color='coral4') + geom_hline(yintercept=0.0088, color='cornflowerblue') + xlab('Sample size') + annotate('text', x=1000, y=0.008, label='var(beta_1) = 0.0088') + ggtitle('Variance of beta_1')
ggplot() + geom_line(aes(x=2:N, y=bi.var[-1]), color='coral4') + geom_hline(yintercept=0.0088, color='cornflowerblue') + xlab('Sample size') + annotate('text', x=1000, y=0.008, label='var(beta_1) = 0.0088') + ggtitle('Variance of beta_1') + theme(plot.title = element_text(hjust = 0.5))
ggplot() + geom_line(aes(x=2:N, y=bi.var[-1]), color='coral4') + geom_hline(yintercept=0.0088, color='cornflowerblue') + xlab('Sample size') + ylab('') annotate('text', x=1000, y=0.008, label='var(beta_1) = 0.0088') + ggtitle('Variance of beta_1') + theme(plot.title = element_text(hjust = 0.5))
ggplot() + geom_line(aes(x=2:N, y=bi.var[-1]), color='coral4') + geom_hline(yintercept=0.0088, color='cornflowerblue') + xlab('Sample size') + ylab(' ') annotate('text', x=1000, y=0.008, label='var(beta_1) = 0.0088') + ggtitle('Variance of beta_1') + theme(plot.title = element_text(hjust = 0.5))
ggplot() + geom_line(aes(x=2:N, y=bi.var[-1]), color='coral4') + geom_hline(yintercept=0.0088, color='cornflowerblue') + xlab('Sample size') + ylab('') + annotate('text', x=1000, y=0.008, label='var(beta_1) = 0.0088') + ggtitle('Variance of beta_1') + theme(plot.title = element_text(hjust = 0.5))
N <- 2000
b0 <- rep(0, N)
b1 <- rep(0, N)
n <- 2000
set.seed(403)
for (i in 1:N) {
x <- rnorm(n, mean=0, sd=1)
p <- exp(1+2*x)/(1 + exp(1+2*x))
model.fit <- glm(rbinom(n,1,p)~x, family=binomial)
b0[i] <- model.fit$coefficients[1]
b1[i] <- model.fit$coefficients[2]
}
N <- 2000
b0 <- rep(0, N)
b1 <- rep(0, N)
n <- 2000
set.seed(403)
for (i in 1:N) {
x <- rnorm(n, mean=0, sd=1)
p <- exp(1+2*x)/(1 + exp(1+2*x))
model.fit <- glm(rbinom(n,1,p)~x, family=binomial)
b0[i] <- model.fit$coefficients[1]
b1[i] <- model.fit$coefficients[2]
}
p1 <- ggplot() + geom_histogram(aes(b0),
bins=50,
color="black",
fill="cornsilk3") + geom_vline(xintercept=1, color='darkred', size=1.3) + annotate('text', x=1.05, y=140, label='<- Real beta_0') +  xlab('beta_0') + ylab('') + ggtitle('Distribution of Beta_0 and Beta_1')
p2 <- ggplot() + geom_histogram(aes(b1),
bins=50,
color="black",
fill="blueviolet") + geom_vline(xintercept=2, color='darkred', size=1.3) + annotate('text', x=2.08, y=120, label='<- Real beta_1') +  xlab('beta_1') + ylab('')
grid.arrange(p1, p2, nrow=2)
N <- 2000
b0 <- rep(0, N)
b1 <- rep(0, N)
n <- 2000
set.seed(403)
for (i in 1:N) {
x <- rnorm(n, mean=0, sd=1)
p <- exp(1+2*x)/(1 + exp(1+2*x))
model.fit <- glm(rbinom(n,1,p)~x, family=binomial)
b0[i] <- model.fit$coefficients[1]
b1[i] <- model.fit$coefficients[2]
}
p1 <- ggplot() + geom_histogram(aes(b0),
bins=50,
color="black",
fill="cornsilk3") + geom_vline(xintercept=1, color='darkred', size=1.3) + annotate('text', x=1.05, y=140, label='<- Real beta_0') +  xlab('beta_0') + ylab('') + ggtitle('Distribution of Beta_0 and Beta_1')
p2 <- ggplot() + geom_histogram(aes(b1),
bins=50,
color="black",
fill="blueviolet") + geom_vline(xintercept=2, color='darkred', size=1.3) + annotate('text', x=2.08, y=120, label='<- Real beta_1') +  xlab('beta_1') + ylab('')
grid.arrange(p1, p2, nrow=2)
require(gridExtra)
N <- 2000
b0 <- rep(0, N)
b1 <- rep(0, N)
n <- 500
set.seed(403)
for (i in 1:N) {
x <- rnorm(n, mean=0, sd=1)
p <- exp(1+2*x)/(1 + exp(1+2*x))
model.fit <- glm(rbinom(n,1,p)~x, family=binomial)
b0[i] <- model.fit$coefficients[1]
b1[i] <- model.fit$coefficients[2]
}
p1 <- ggplot() + geom_histogram(aes(b0),
bins=50,
color="black",
fill="cornsilk3") + geom_vline(xintercept=1, color='darkred', size=1.3) + annotate('text', x=1.1, y=140, label='<- Real beta_0') +  xlab('beta_0') + ylab('') + ggtitle('Distribution of Beta_0 and Beta_1')
p2 <- ggplot() + geom_histogram(aes(b1),
bins=50,
color="black",
fill="blueviolet") + geom_vline(xintercept=2, color='darkred', size=1.3) + annotate('text', x=2.15, y=120, label='<- Real beta_1') +  xlab('beta_1') + ylab('')
grid.arrange(p1, p2, nrow=2)
require(gridExtra)
N <- 2000
b0 <- rep(0, N)
b1 <- rep(0, N)
n <- 500
set.seed(403)
for (i in 1:N) {
x <- rnorm(n, mean=0, sd=1)
p <- exp(1+2*x)/(1 + exp(1+2*x))
model.fit <- glm(rbinom(n,1,p)~x, family=binomial)
b0[i] <- model.fit$coefficients[1]
b1[i] <- model.fit$coefficients[2]
}
p1 <- ggplot() + geom_histogram(aes(b0),
bins=50,
color="black",
fill="cornsilk3") + geom_vline(xintercept=1, color='darkred', size=1.3) + annotate('text', x=1.1, y=140, label='<- Real beta_0') +  xlab('beta_0') + ylab('') + ggtitle('Distribution of Beta_0 and Beta_1') + theme(plot.title = element_text(hjust = 0.5))
p2 <- ggplot() + geom_histogram(aes(b1),
bins=50,
color="black",
fill="blueviolet") + geom_vline(xintercept=2, color='darkred', size=1.3) + annotate('text', x=2.15, y=120, label='<- Real beta_1') +  xlab('beta_1') + ylab('')
grid.arrange(p1, p2, nrow=2)
b0.fit <- fitdistr(b0, densfun='normal')
b1.fit <- fitdistr(b1, densfun='normal')
b0.x <- seq(from=min(b0), to=max(b0), length.out=length(b0))
b1.x <- seq(from=min(b1), to=max(b1), length.out=length(b1))
b0.d <- dnorm(b0.x, b0.fit$estimate[1], b0.fit$estimate[2])
b1.d <- dnorm(b1.x, b1.fit$estimate[1], b1.fit$estimate[2])
p1 <- ggplot() + geom_histogram(aes(b0, y=..density..),
bins=50,
color="black",
fill="cornsilk3") + geom_vline(xintercept=1, color='darkred', size=1.3) + annotate('text', x=1.2, y=3, label='<- Real beta_0') + geom_area(aes(b0.x, b0.d), fill='coral', alpha=0.4) + xlab('beta_0') + ylab('') + ggtitle('Distribution of Beta_0 and Beta_1') + theme(plot.title = element_text(hjust = 0.5))
p2 <- ggplot() + geom_histogram(aes(b1, y=..density..),
bins=50,
color="black",
fill="blueviolet") + geom_vline(xintercept=2, color='darkred', size=1.3) + annotate('text', x=2.2, y=2, label='<- Real beta_1') + geom_area(aes(b1.x, b1.d), fill='coral', alpha=0.4) + xlab('beta_1') + ylab('')
grid.arrange(p1, p2, nrow=2)
b0.fit <- fitdistr(b0, densfun='normal')
b1.fit <- fitdistr(b1, densfun='normal')
b0.x <- seq(from=min(b0), to=max(b0), length.out=length(b0))
b1.x <- seq(from=min(b1), to=max(b1), length.out=length(b1))
b0.d <- dnorm(b0.x, b0.fit$estimate[1], b0.fit$estimate[2])
b1.d <- dnorm(b1.x, b1.fit$estimate[1], b1.fit$estimate[2])
p1 <- ggplot() + geom_histogram(aes(b0, y=..density..),
bins=50,
color="black",
fill="cornsilk3") + geom_vline(xintercept=1, color='darkred', size=1.3) + annotate('text', x=1.1, y=3, label='<- Real beta_0') + geom_area(aes(b0.x, b0.d), fill='coral', alpha=0.4) + xlab('beta_0') + ylab('') + ggtitle('Distribution of Beta_0 and Beta_1') + theme(plot.title = element_text(hjust = 0.5))
p2 <- ggplot() + geom_histogram(aes(b1, y=..density..),
bins=50,
color="black",
fill="blueviolet") + geom_vline(xintercept=2, color='darkred', size=1.3) + annotate('text', x=2.1, y=2, label='<- Real beta_1') + geom_area(aes(b1.x, b1.d), fill='coral', alpha=0.4) + xlab('beta_1') + ylab('')
grid.arrange(p1, p2, nrow=2)
b0.fit <- fitdistr(b0, densfun='normal')
b1.fit <- fitdistr(b1, densfun='normal')
b0.x <- seq(from=min(b0), to=max(b0), length.out=length(b0))
b1.x <- seq(from=min(b1), to=max(b1), length.out=length(b1))
b0.d <- dnorm(b0.x, b0.fit$estimate[1], b0.fit$estimate[2])
b1.d <- dnorm(b1.x, b1.fit$estimate[1], b1.fit$estimate[2])
p1 <- ggplot() + geom_histogram(aes(b0, y=..density..),
bins=50,
color="black",
fill="cornsilk3") + geom_vline(xintercept=1, color='darkred', size=1.3) + annotate('text', x=1.1, y=3, label='<- Real beta_0') + geom_area(aes(b0.x, b0.d), fill='coral', alpha=0.4) + xlab('beta_0') + ylab('') + ggtitle('Distribution of Beta_0 and Beta_1') + theme(plot.title = element_text(hjust = 0.5))
p2 <- ggplot() + geom_histogram(aes(b1, y=..density..),
bins=50,
color="black",
fill="blueviolet") + geom_vline(xintercept=2, color='darkred', size=1.3) + annotate('text', x=2.15, y=2, label='<- Real beta_1') + geom_area(aes(b1.x, b1.d), fill='coral', alpha=0.4) + xlab('beta_1') + ylab('')
grid.arrange(p1, p2, nrow=2)
knitr::opts_chunk$set(echo = TRUE)
n <- 500
set.seed(403)
x <- rnorm(n, mean=0, sd=1)
p <- exp(1+2*x)/(1 + exp(1+2*x))
y <- rbinom(n,1,p)
model.fit <- glm(y~x, family=binomial)
model.fit
print(paste('The fitted parameter beta_0 is ', model.fit$coefficients[1]))
print(paste('The fitted parameter beta_1 is ', model.fit$coefficients[2]))
require(gridExtra)
N <- 2000
b0 <- rep(0, N)
b1 <- rep(0, N)
n <- 500
set.seed(403)
for (i in 1:N) {
x <- rnorm(n, mean=0, sd=1)
p <- exp(1+2*x)/(1 + exp(1+2*x))
model.fit <- glm(rbinom(n,1,p)~x, family=binomial)
b0[i] <- model.fit$coefficients[1]
b1[i] <- model.fit$coefficients[2]
}
p1 <- ggplot() + geom_histogram(aes(b0),
bins=50,
color="black",
fill="cornsilk3") + geom_vline(xintercept=1, color='darkred', size=1.3) + annotate('text', x=1.1, y=140, label='<- Real beta_0') +  xlab('beta_0') + ylab('') + ggtitle('Distribution of Beta_0 and Beta_1') + theme(plot.title = element_text(hjust = 0.5))
p2 <- ggplot() + geom_histogram(aes(b1),
bins=50,
color="black",
fill="blueviolet") + geom_vline(xintercept=2, color='darkred', size=1.3) + annotate('text', x=2.15, y=120, label='<- Real beta_1') +  xlab('beta_1') + ylab('')
grid.arrange(p1, p2, nrow=2)
b0.fit <- fitdistr(b0, densfun='normal')
b1.fit <- fitdistr(b1, densfun='normal')
b0.x <- seq(from=min(b0), to=max(b0), length.out=length(b0))
b1.x <- seq(from=min(b1), to=max(b1), length.out=length(b1))
b0.d <- dnorm(b0.x, b0.fit$estimate[1], b0.fit$estimate[2])
b1.d <- dnorm(b1.x, b1.fit$estimate[1], b1.fit$estimate[2])
p1 <- ggplot() + geom_histogram(aes(b0, y=..density..),
bins=50,
color="black",
fill="cornsilk3") + geom_vline(xintercept=1, color='darkred', size=1.3) + annotate('text', x=1.1, y=3, label='<- Real beta_0') + geom_area(aes(b0.x, b0.d), fill='coral', alpha=0.4) + xlab('beta_0') + ylab('') + ggtitle('Distribution of Beta_0 and Beta_1') + theme(plot.title = element_text(hjust = 0.5))
p2 <- ggplot() + geom_histogram(aes(b1, y=..density..),
bins=50,
color="black",
fill="blueviolet") + geom_vline(xintercept=2, color='darkred', size=1.3) + annotate('text', x=2.15, y=2, label='<- Real beta_1') + geom_area(aes(b1.x, b1.d), fill='coral', alpha=0.4) + xlab('beta_1') + ylab('')
grid.arrange(p1, p2, nrow=2)
N <- 2000
b1 <- rep(0, N)
bi.var <- rep(0, N)
n <- 2000
set.seed(403)
for (i in 1:N) {
x <- rnorm(n, mean=0, sd=1)
p <- exp(1+2*x)/(1 + exp(1+2*x))
model.fit <- glm(rbinom(n,1,p)~x, family=binomial)
b1[i] <- model.fit$coefficients[2]
if (i >= 2) {
bi.var[i] <- var(b1[1:i])
}
}
ggplot() + geom_line(aes(x=2:N, y=bi.var[-1]), color='coral4') + geom_hline(yintercept=0.0088, color='cornflowerblue') + xlab('Sample size') + ylab('') + annotate('text', x=1000, y=0.008, label='var(beta_1) = 0.0088') + ggtitle('Variance of beta_1') + theme(plot.title = element_text(hjust = 0.5))
?runif
?rexp
n <- 100000
M <- 2
U <- runif(N, min=0, max=1)
Y <- runif(N, min=-10, max=10)
Q <- dexp(abs(Y)) / 2
X <- Y[which(U < f(x)/(M*Q))]
X
length(X)
n <- 100000
M <- 2
U <- runif(N, min=0, max=1)
Y <- runif(N, min=-1, max=1)
Q <- dexp(abs(Y)) / 2
X <- Y[which(U < f(x)/(M*Q))]
length(X)
min(rexp(10000))
random(0,1)
n <- 100000
M <- 2
U <- runif(N, min=0, max=1)
Y <- rexp(N, rate=1) * (rbinom(N,1,0.5)*2-1)
Q <- dexp(abs(Y)) / 2
X <- Y[which(U < f(x)/(M*Q))]
length(X)
n <- 100000
M <- 2
U <- runif(N, min=0, max=1)
Y <- rexp(N, rate=1) * (rbinom(N,1,0.5)*2-1)
Q <- dexp(abs(Y)) / 2
X <- Y[which(U < f(x)/(M*Q))]
X <- Y[which(U < f(x)/(M*Q))]
length(X)
set.seed(403)
n <- 50000
M <- 2
U <- runif(N, min=0, max=1)
Y <- rexp(N, rate=1) * (rbinom(N,1,0.5)*2-1)
Q <- dexp(abs(Y)) / 2
X <- Y[which(U < f(x)/(M*Q))]
length(X)
set.seed(403)
n <- 50000
M <- 2
U <- runif(N, min=0, max=1)
Y <- rexp(N, rate=1) * (rbinom(N,1,0.5)*2-1)
Q <- dexp(abs(Y)) / 2
X <- Y[U < f(x)/(M*Q)]
length(X)
set.seed(403)
n <- 50000
M <- 2
U <- runif(N, min=0, max=1)
neg <- rbinom(N,1,0.5)*2-1
Y <- rexp(N, rate=1)
Y <- Y * neg
Q <- dexp(abs(Y)) / 2
X <- Y[U < f(x)/(M*Q)]
length(X)
N=50000
m=2
u0
u0=runif(N)
is_neg <- rbinom(N,1,0.5)
y = rexp(N)
y = y * (2*is_neg - 1)
set.seed(403)
n <- 50000
M <- 2
U <- runif(N, min=0, max=1)
Y <- rexp(N, rate=1)*(rbinom(N,1,0.5)*2-1)
Q <- dexp(abs(Y)) / 2
X <- Y[U < f(Y)/(M*Q)]
length(X)
ggplot() + geom_histogram(aes(X, y=..density..), bins=50)
ggplot() + geom_histogram(aes(X, y=..density..),
bins=50,
color="black",
fill="blueviolet"))
ggplot() + geom_histogram(aes(X, y=..density..),
bins=50,
color="black",
fill="blueviolet")
xx <- seq(from=min(X), to=max(X), length.out=length(X))
ggplot() + geom_histogram(aes(X, y=..density..),
bins=50,
color="black",
fill="grey") + aes(xx, f(xx)), fill='coral', alpha=0.4
xx <- seq(from=min(X), to=max(X), length.out=length(X))
ggplot() + geom_histogram(aes(X, y=..density..),
bins=50,
color="black",
fill="grey") + geom_area(aes(xx, f(xx)), fill='coral', alpha=0.4)
xx <- seq(from=min(X), to=max(X), length.out=length(X))
ggplot() + geom_histogram(aes(X, y=..density..),
bins=50,
color="black",
fill="grey") + geom_area(aes(xx, f(xx), fill='Real Desnity') , alpha=0.4)
xx <- seq(from=min(X), to=max(X), length.out=length(X))
ggplot() + geom_histogram(aes(X, y=..density..),
bins=50,
color="black",
fill="grey") + geom_line(aes(xx, f(xx), color='Real Desnity'))
xx <- seq(from=min(X), to=max(X), length.out=length(X))
ggplot() + geom_histogram(aes(X, y=..density..),
bins=50,
color="black",
fill="grey") + geom_line(aes(xx, f(xx), color='Real Desnity'), size=1.3)
xx <- seq(from=min(X), to=max(X), length.out=length(X))
ggplot() + geom_histogram(aes(X, y=..density...),
bins=50,
color="black",
fill="grey") + geom_line(aes(xx, f(xx), color='Desnity Curve p(x)'), size=1.3)
xx <- seq(from=min(X), to=max(X), length.out=length(X))
ggplot() + geom_histogram(aes(X, y=..density..),
bins=50,
color='black',
fill='grey') + geom_line(aes(xx, f(xx), color='Desnity Curve p(x)'), size=1.3)
xx <- seq(from=min(X), to=max(X), length.out=length(X))
ggplot() + geom_histogram(aes(X, y=..density..),
bins=50,
color='black',
fill='grey') + geom_line(aes(xx, f(xx), color='Desnity Curve p(x)'), size=1.3) + xlab('x') + ylab('') + ggtitle('Histogram of x and p(x)') + theme(plot.title = element_text(hjust = 0.5))
